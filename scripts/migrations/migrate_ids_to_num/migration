#!/usr/bin/env bash
set -eo pipefail

SRC_CHATS_TABLE=$1
DEST_CHATS_TABLE=$2
SRC_SUBMISSIONS_TABLE=$3
DEST_SUBMISSIONS_TABLE=$4
AWS_REGION="ca-central-1"

SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &> /dev/null && pwd)

# Dump
dynamodump \
  --mode backup \
  --dumpPath dump \
  --region $AWS_REGION \
  --srcTable $SRC_CHATS_TABLE

dynamodump \
  --mode backup \
  --dumpPath dump \
  --region $AWS_REGION \
  --srcTable $SRC_SUBMISSIONS_TABLE

# Use 'migration' folder as source for modified schema and data
cp -r dump migration

# Convert IDs to string (Chats Table)
CHATS_TABLE_FX_ARG=$(cat "${SCRIPT_DIR}/fx_arg_chats_table.js")

cat "dump/${SRC_CHATS_TABLE}/schema.json" \
  | fx "${CHATS_TABLE_FX_ARG}" \
  > "migration/${SRC_CHATS_TABLE}/schema.json"

cat "dump/${SRC_CHATS_TABLE}/data/0001.json" \
  | fx "{...this, Items: this.Items.map(i => ({chatId: { 'S': i.chatId.N }, userId: { 'S': i.userId.N }})) }" \
  > "migration/${SRC_CHATS_TABLE}/data/0001.json"

# Convert IDs to string (Submissions Table)
SUBMISSIONS_TABLE_FX_ARG=$(cat "${SCRIPT_DIR}/fx_arg_submissions_table.js")
cat "dump/${SRC_SUBMISSIONS_TABLE}/schema.json" \
  | fx "${SUBMISSIONS_TABLE_FX_ARG}" \
  > "migration/${SRC_SUBMISSIONS_TABLE}/schema.json"

cat "dump/${SRC_SUBMISSIONS_TABLE}/data/0001.json" \
  | fx "{...this, Items: this.Items.map(i => ({ userId: { S: i.userId.N }, guesses: i.guesses, wordleNumber: i.wordleNumber })) }" \
  > "migration/${SRC_SUBMISSIONS_TABLE}/data/0001.json"

# Restore
dynamodump \
  --mode restore \
  --dumpPath migration \
  --noConfirm \
  --region $AWS_REGION \
  --srcTable $SRC_CHATS_TABLE \
  --destTable $DEST_CHATS_TABLE

dynamodump \
  --mode restore \
  --dumpPath migration \
  --noConfirm \
  --region $AWS_REGION \
  --srcTable $SRC_SUBMISSIONS_TABLE \
  --destTable $DEST_SUBMISSIONS_TABLE

rm -rf dump
rm -rf migration

echo "Migration complete."
