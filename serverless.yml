org: rperryng
service: wordle-bot-${self:custom.platform}
app: wordle-bot-${self:custom.platform}

frameworkVersion: '2'

custom:
  platform: 'telegram'
  submissionsTable: 'wordle-bot-${self:custom.platform}-submissions-table-${self:provider.stage}'
  chatsTable: 'wordle-bot-${self:custom.platform}-chats-table-${self:provider.stage}'

plugins:
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs14.x
  region: ca-central-1
  lambdaHashingVersion: '20201221'
  stage: ${env:SERVERLESS_STAGE}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:BatchGetItem
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ SubmissionsTable, Arn ]
            - Fn::GetAtt: [ ChatsTable, Arn ]
            - Fn::Join:
              - "/"
              -
                - Fn::GetAtt: [ ChatsTable, Arn ]
                - "index/*"
  environment:
    AWS_SUBMISSIONS_TABLE: ${self:custom.submissionsTable}
    AWS_CHATS_TABLE: ${self:custom.chatsTable}

functions:
  telegram:
    handler: dist/handlers/telegram.handler
    environment:
      TELEGRAM_BOT_KEY: ${env:TELEGRAM_BOT_KEY}
    events:
      - http:
          path: /telegram
          method: ANY

  # TODO: move to its own serverless config
  slack:
    handler: dist/handlers/slack.handler
    environment:
      SLACK_BOT_TOKEN: ${env:SLACK_BOT_TOKEN}
      SLACK_SIGNING_SECRET: ${env:SLACK_SIGNING_SECRET}
    events:
      - http:
          path: /slack/events
          method: post

resources:
  Resources:
    SubmissionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.submissionsTable}
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: N
          - AttributeName: wordleNumber
            AttributeType: N
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: wordleNumber
            KeyType: RANGE

    ChatsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.chatsTable}
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        AttributeDefinitions:
          - AttributeName: chatId
            AttributeType: N
          - AttributeName: userId
            AttributeType: N
        KeySchema:
          - AttributeName: chatId
            KeyType: HASH
          - AttributeName: userId
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: UserIdIndex
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
              - AttributeName: chatId
                KeyType: RANGE
            Projection:
              ProjectionType: 'ALL'
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
